@model  Framework.Models.View.UserGoalsView
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Goals";
    Layout = "Layout";
}

@section LeftPanel
{
    @await Component.InvokeAsync("LeftMenu")
}

<form class="ui form segment" asp-controller="Diet" asp-action="UserGoals" method="post">

    <div class="ui grid">

        <div class="column row">
            <div class="eight wide column">
                <div class="field">
                    <div class="ui small header">@Framework.Resources.ProductLanguage.Calories</div>
                    <div class="ui input">
                        <input id="Calories" class="NumericValidation" type="text" asp-for="Calories" onkeyup="ChangeCalories(this)">
                        <span asp-validation-for="Calories" class="ui red header"></span>
                    </div>
                </div>
            </div>
        </div>

        <div class="three column row">
      
            <div class="left floated four wide column">
                <div class="field">
                    <div class="ui small header">@Framework.Resources.ProductLanguage.Protein</div>
                    <div class="ui input">
                        <input id="Proteins" class="NumericValidation" type="text" asp-for="Proteins" onkeyup="ChangeMacro(this)">
                    </div>
                    <span asp-validation-for="Proteins" class="ui red header"></span>
                </div>
            </div>

            <div class="left floated four wide column">
                <div class="field">
                    <div class="ui small header">@Framework.Resources.ProductLanguage.Carbs</div>
                    <div class="ui input">
                        <input id="Carbs" class="NumericValidation"  type="text" asp-for="Carbohydrates"  onkeyup="ChangeMacro(this)">
                    </div>
                    <span asp-validation-for="Carbohydrates" class="ui red header"></span>
                </div>
            </div>

            <div class="left floated four wide column">
                <div class="field">
                    <div class="ui small header">@Framework.Resources.ProductLanguage.Fat</div>
                    <div class="ui input">
                        <input id="Fat" class="NumericValidation" type="text" asp-for="Fat"  onkeyup="ChangeMacro(this)">
                    </div>
                    <span asp-validation-for="Fat" class="ui red header"></span>
                </div>
            </div>

        </div>

        <div class="three column row">

            <div class="left floated four wide column">

                <div class="field">
                    <div class="ui input">
                        <input id="PercentageProtein" class="NumericValidation" placeholder="%" type="text" asp-for="PercentageProtein" onkeyup="PercentageChanged(this)">
                        <div class="ui basic label">%</div>
                        <span asp-validation-for="PercentageProtein" class="ui red header"></span>
                    </div>
                </div>
            </div>

            <div class="left floated four wide column">

                <div class="field">
                    <div class="ui input">
                        <input id="PercentageCarbs" class="NumericValidation" placeholder="%" type="text" asp-for="PercentageCarbs" onkeyup="PercentageChanged(this)">
                        <div class="ui basic label">%</div>
                        <span asp-validation-for="PercentageCarbs" class="ui red header"></span>
                    </div>
                </div>
            </div>

            <div class="left floated four wide column">

                <div class="field">
                    <div class="ui input ">
                        <input id="PercentageFat" class="NumericValidation" placeholder="%" type="text"  asp-for="PercentageFat" onkeyup="PercentageChanged(this)">
                        <div class="ui basic label">%</div>
                        <span asp-validation-for="PercentageFat" class="ui red header"></span>
                    </div>
                </div>
            </div>
        </div>

        <div class="column center aligned row">
            <div class="column">
                <div id="ValidationField" class="field red" style="display:none;">>  </div>
            </div>
        </div>
    </div>

    <button class="ui blue button" type="submit">
       @Framework.Resources.ButtonLanguage.Change
    </button>


    <div class="margin-top">
        <div class="fields">
            <div class="field">@Framework.Resources.ProductLanguage.Protein</div>
            <div class="field">@Model.Proteins</div>
            <div class="field">@Model.PercentageProtein %</div>
        </div>

        <div class="ui divider"></div>

        <div class="fields">
            <div class="field">@Framework.Resources.ProductLanguage.Fat</div>
            <div class="field">@Model.Fat</div>
            <div class="field">@Model.PercentageFat %</div>
        </div>

        <div class="ui divider"></div>

        <div class="fields">
            <div class="field">@Framework.Resources.ProductLanguage.Carbs</div>
            <div class="field ">@Model.Carbohydrates</div>
            <div class="field">@Model.PercentageCarbs %</div>
        </div>
    </div>
</form>

@section Scripts
{
<script>
    $(document).ready(function ()
    {
        $(".NumericValidation").keydown(function (e)
        {
            // Sprawdzenie znaków specjalnych.
            if (KeyIsSpecialCharacter(e))
                return;

            var selectionLength = this.selectionEnd - this.selectionStart
            if (selectionLength != this.value.length)
            {
                if (this.value[0] == 0) {
                    e.preventDefault();
                    return;
                }
            }

            // Upewnia się że jest to liczba jeżeli nie stopuje wciśnięcie
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105) )
                e.preventDefault();
        });

        function KeyIsSpecialCharacter(e)
        {
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13]) !== -1 ||
                // Pozwala na: Ctrl+A
           (e.keyCode == 65 && e.ctrlKey === true) ||
                // Pozwala na: Ctrl+C
           (e.keyCode == 67 && e.ctrlKey === true) ||
                // Pozwala na: Ctrl+X
           (e.keyCode == 88 && e.ctrlKey === true) ||
                // Pozwala na: home, end, left, right
           (e.keyCode >= 35 && e.keyCode <= 39)) { return true; }

            return false
        }
    })

    function PercentageChanged(input)
    {
        if (input.value < 0 || input.value === '') input.value = 0;
        if (input.value > 100) input.value = 100;

        var calories = parseInt(document.getElementById("Calories").value)
        var protein = parseInt(document.getElementById("PercentageProtein").value)
        var carbs = parseInt(document.getElementById("PercentageCarbs").value)
        var fat = parseInt(document.getElementById("PercentageFat").value)

        if (isNaN(calories)) calories = 0

        if (input.id === "PercentageProtein")
        {
            var proteinInput = document.getElementById("Proteins")
            proteinInput.value = Math.ceil((calories / 4) * protein / 100)
        }
        else if (input.id === "PercentageCarbs")
        {
            var carbsInput = document.getElementById("Carbs")
            carbsInput.value = Math.ceil((calories / 4) * carbs / 100)
        }
        else if (input.id === "PercentageFat")
        {
            var fatInput = document.getElementById("Fat")
            fatInput.value = Math.ceil((calories / 9) * fat / 100)
        }

        var count = protein + carbs + fat

        if (count > 100) {
            var field = document.getElementById("ValidationField")
            field.innerHTML = "Wartość " + count + "% przekracza wartość 100%."
            field.style.display = "block";
        }
        else
        {
            var field = document.getElementById("ValidationField")
            field.innerHTML = ""
            field.style.display = "none";
        }
    }

    function ChangeCalories(input)
    {
        var calories = input.value
        var protein = parseInt(document.getElementById("PercentageProtein").value)
        var carbs = parseInt(document.getElementById("PercentageCarbs").value)
        var fat = parseInt(document.getElementById("PercentageFat").value)

        if (isNaN(calories)) calories = 0

        var proteinInput = document.getElementById("Proteins")
        proteinInput.value = Math.ceil((calories / 4 * protein / 100))

        var carbsInput = document.getElementById("Carbs")
        carbsInput.value = Math.ceil((calories / 4 * carbs / 100))

        var fatInput = document.getElementById("Fat")
        fatInput.value = Math.ceil((calories / 9) * fat / 100)
    }

    function ChangeMacro(input)
    {
        var caloriesInput = document.getElementById("Calories")
        var protein = parseInt(document.getElementById("Proteins").value)
        var carbs = parseInt(document.getElementById("Carbs").value)
        var fat = parseInt(document.getElementById("Fat").value)

        if (isNaN(protein)) protein = 0
        if (isNaN(carbs)) carbs = 0
        if (isNaN(fat)) fat = 0

        var caloriesNumber = protein * 4 + carbs * 4 + fat * 9
        caloriesInput.value = caloriesNumber

        if (caloriesNumber == 0)
        {
            document.getElementById("PercentageProtein").value = 0;
            document.getElementById("PercentageFat").value = 0;
            document.getElementById("PercentageCarbs").value = 0;
        }
        else
        {
            document.getElementById("PercentageProtein").value = Math.round(((protein * 4) / caloriesNumber) * 100)
            document.getElementById("PercentageFat").value = Math.round(((fat * 9) / caloriesNumber) * 100)
            document.getElementById("PercentageCarbs").value = Math.round(((carbs * 4) / caloriesNumber) * 100)
        }
    }
</script>
}