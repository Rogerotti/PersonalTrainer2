@model  Framework.Models.Dto.UserDto
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Register";
    Layout = "Layout";
}
<body>
    <form class="ui form segment" asp-controller="Register" asp-action="Index" method="post">

        <div class="ui grid" >

            <div class="two column row">

                <div class="column">
                    <div class="field">
                        <label>@Framework.Resources.UserLanguage.Login</label>
                        <input class="MaxLength30" placeholder="@Framework.Resources.UserLanguage.Login" type="text" asp-for="Login">
                        <span asp-validation-for="Login" class="ui red header"></span>
                    </div>
                </div>

                <div class="column">
                    <div class="field">
                        <label>@Framework.Resources.UserLanguage.Email</label>
                        <input class="MaxLength255" placeholder="@Framework.Resources.UserLanguage.Email" type="text" asp-for="Email">
                        <span asp-validation-for="Email" class="ui red header"></span>
                    </div>
                </div>

            </div>

            <div class="two column row">

                <div class="column">
                    <div class="field">
                        <label>@Framework.Resources.UserLanguage.Password</label>
                        <div class="ui left icon input">
                            <input type="password" asp-for="Password">
                            <i class="lock icon"></i>
                        </div>
                        <span asp-validation-for="Password" class="ui red header"></span>
                    </div>
                </div>

                <div class="column">
                    <div class="field">
                        <label>@Framework.Resources.UserLanguage.ConfirmPassword</label>
                        <div class="ui left icon input">
                            <input type="password" asp-for="PasswordConfirmation">
                            <i class="lock icon"></i>
                        </div>
                        <span asp-validation-for="PasswordConfirmation" class="ui red header"></span>
                    </div>
                </div>

            </div>

            <div class="two column row">

                <div class="centered column">
                    <div class="field">
                        <label>@Framework.Resources.UserLanguage.Weight</label>
                        <div class="ui right labeled input">
                            <input class="NumericValidation MaxLength3" placeholder="@Framework.Resources.UserLanguage.Weight" type="text" asp-for="Weight">
                            <div class="ui basic label">kg</div>
                        </div>
                        <span asp-validation-for="Weight" class="ui red header"></span>
                    </div>
                </div>

                <div class="centered column">
                    <div class="field">
                        <label>@Framework.Resources.UserLanguage.Height</label>
                        <div class="ui right labeled input">
                            <input class="NumericValidation MaxLength3" placeholder="@Framework.Resources.UserLanguage.Height" type="text" asp-for="Height">
                            <div class="ui basic label">cm</div>
                        </div>
                        <span asp-validation-for="Height" class="ui red header"></span>
                        </div>
                    </div>

            </div>

            <div class="two column row">

                <div class="centered column">
                    <div class="field">
                        <label>@Framework.Resources.UserLanguage.Gender</label>
                        <select class="ui dropdown"  asp-for="Gender">
                            <option value="">@Framework.Resources.UserLanguage.Gender</option>
                            <option value="0">@Framework.Resources.UserLanguage.Male</option>
                            <option value="1">@Framework.Resources.UserLanguage.Female</option>
                        </select>
                    </div>
                </div>

                <div class="centered column">

                    <div class="field">
                        <label>@Framework.Resources.UserLanguage.Age</label>
                        <input class="NumericValidation MaxLength2" placeholder="@Framework.Resources.UserLanguage.EnterAge" type="text" asp-for="Age">
                        <span asp-validation-for="Age" class="ui red header"></span>
                    </div>
                </div>
            </div>

            <div>
                <div class="g-recaptcha" data-sitekey="6LeBIUAUAAAAAAMFvYndsTB2U94MguKJ2040MM-6"></div>
                <span asp-validation-for="ReCaptcha" class="ui red header"></span>
            </div>
    
            <div class="column centered row">
                <button class="ui blue button" type="submit">
                     @Framework.Resources.UserLanguage.Register
                </button>
            </div>
    

        </div>

    </form>
@section Scripts
    {

        <script>$('.ui.dropdown').dropdown('refresh');</script>

        <!--Pozwala na wpisywanie samych liczb.-->
        <script>
            $(document).ready(function ()
            {
                $(".NumericValidation").keydown(function (e)
                {
                    // Sprawdzenie znaków specjalnych.
                    if (KeyIsSpecialCharacter(e))
                        return;

                    // Upewnia się że jest to liczba jeżeli nie stopuje wciśnięcie
                    if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105) )
                        e.preventDefault();
                });

                $(".MaxLength2").keydown(function (e)
                {
                    // Sprawdzenie znaków specjalnych.
                    if (KeyIsSpecialCharacter(e))
                        return;

                    MaxLengthPrevent(this, 2,e);
                });

                $(".MaxLength3").keydown(function (e)
                {
                    // Sprawdzenie znaków specjalnych.
                    if (KeyIsSpecialCharacter(e))
                        return;
                    // Sprawdza maksymalną długość tekstu.
                    MaxLengthPrevent(this,3,e);

                });

                $(".MaxLength3").keydown(function (e) {
                    // Sprawdzenie znaków specjalnych.
                    if (KeyIsSpecialCharacter(e))
                        return;
                    // Sprawdza maksymalną długość tekstu.
                    MaxLengthPrevent(this, 3, e);

                });

                $(".MaxLength30").keydown(function (e) {
                    // Sprawdzenie znaków specjalnych.
                    if (KeyIsSpecialCharacter(e))
                        return;
                    // Sprawdza maksymalną długość tekstu.
                    MaxLengthPrevent(this, 30, e);

                });

                $(".MaxLength255").keydown(function (e)
                {
                    // Sprawdzenie znaków specjalnych.
                    if (KeyIsSpecialCharacter(e))
                        return;
                    // Sprawdza maksymalną długość tekstu.
                    MaxLengthPrevent(this, 255, e);

                });

                //  Metoda sprawdzająca czy znak jest znakiem specjalnym. 
                function KeyIsSpecialCharacter(e)
                {
                    if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                        // Pozwala na: Ctrl+A
                   (e.keyCode == 65 && e.ctrlKey === true) ||
                        // Pozwala na: Ctrl+C
                   (e.keyCode == 67 && e.ctrlKey === true) ||
                        // Pozwala na: Ctrl+X
                   (e.keyCode == 88 && e.ctrlKey === true) ||
                        // Pozwala na: home, end, left, right
                   (e.keyCode >= 35 && e.keyCode <= 39)){ return true; }

                    return false
                }

                // Zabezpiecza przed wpisanie tekstu większym niż podana długość.
                // W przypadku gdy tekst jest zaznaczony anuluje walidacje i usuwa tekst.
                // input - kontrolka
                // maxLength - najdłuzsza długość
                // e - event który zostanie anulowany w przypadku walidacji.
                function MaxLengthPrevent(input,maxLength, e)
                {
                    var selectionLength = input.selectionEnd - input.selectionStart
                    if (selectionLength != 0) 
                        return;
                
                    if (input.value.length >= maxLength) 
                        e.preventDefault();
                }
            });
        </script>
    }
</body>




