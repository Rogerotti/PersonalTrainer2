@model  IEnumerable<Framework.Models.Dto.ProductDto>
@using System.Linq
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Products";
    Layout = "Layout";
}

<style>

   td.h2 {
color: red;
}
        pad-right {
        padding-right: 2em;
    }

    pad-top {
        padding-top: 2em;
    }

    pad-bottom {
        padding-bottom: 2em;
    }

    .margin-top {
        margin-top: 2em;
    }

        .margin-bottom {
        margin-bottom: 2em;
    }
          .margin-bottom2{
        margin-bottom: 1em;
    }

          #testoi {
     clear: right;
    }
</style>

@section LeftPanel
{
    @await Component.InvokeAsync("AdminPanelLeftMenu")
}

<body>

    <div class="ui tabular menu">
        <div class="active item" data-tab="PendingProducts">@Framework.Resources.ProductLanguage.PendingProducts</div>
        <div class="item" data-tab="SubscribedProducts">@Framework.Resources.ProductLanguage.AcceptedProducts</div>
        <div class="item" data-tab="RejectedProducts">@Framework.Resources.ProductLanguage.DeclinedProducts</div>
    </div>


    <div class="ui left icon input margin-bottom">
        <input id="pendingProductsSearch" placeholder="@Framework.Resources.ProductLanguage.SearchProduct" type="text">
        <i class="food icon"></i>
    </div>

    <!--Tabulator z produktami oczekującymi na zatwierdzenie przez administratora.-->
    <div class="ui active tab" data-tab="PendingProducts">

        <div class="ui two column top aligned very relaxed stackable grid">
            <div class="two width column">
                @{
                    if (Model.Any(x => x.State == Framework.Models.ProductState.Pending))
                    {
                            @await Component.InvokeAsync("ProductsManagementTable", new { products = Model.Where(x => x.State == Framework.Models.ProductState.Pending) })
                    }
                    else
                    {
                        <div>@Framework.Resources.ProductLanguage.NoPendingProducts</div>
                    }
                }
          
            </div>

            <div class="column">

                <div class="ui six column row">

                    <div class="column">
                        <div class="field">
                            <div>
                                <strong>@Framework.Resources.ProductLanguage.ProductName :</strong>
                                <label id="pendingDetailsName"></label>
                            </div>
                        </div>
                    </div>

                    <div class="column">
                        <div class="field">
                            <strong>@Framework.Resources.ProductLanguage.ProductManufacturer :</strong>
                            <label id="pendingDetailsManufacturer"></label>
                        </div>
                    </div>

                    <div class="column">
                        <div class="field">
                            <strong>@Framework.Resources.ProductLanguage.Type : </strong>
                            <label id="pendingDetailsType"></label>
                        </div>
                    </div>

                    <div class="column">
                        <div class="field">
                            <strong>@Framework.Resources.ProductLanguage.Calories :</strong>
                            <label id="pendingDetailsCalories"></label>
                        </div>
                    </div>

                    <div class="column">
                        <div class="field">
                            <strong>@Framework.Resources.ProductLanguage.Protein :</strong>
                            <label id="pendingDetailsProtein"></label>
                        </div>
                    </div>

                    <div class="column">
                        <div class="field">
                            <strong>@Framework.Resources.ProductLanguage.Fat :</strong>
                            <label id="pendingDetailsFat"></label>
                        </div>
                    </div>

                    <div class="column">
                        <div class="field">
                            <strong>@Framework.Resources.ProductLanguage.Carbs :</strong>
                            <label id="pendingDetailsCarbs"></label>
                        </div>
                    </div>

                    <div class="column row">

                        <div class="ui grid">
                            <div class="three wide column">
                                <form asp-controller="Admin" asp-action="AcceptSubscription" method="get">
                                    <input type="hidden" name="productId" value="" />
                                    <button disabled id="pendingAcceptButton" class="ui blue tiny button" type="submit">@Framework.Resources.ButtonLanguage.Accept</button>
                                </form>
                            </div>

                            <div class="three wide column">
                                <form asp-controller="Admin" asp-action="DeclineSubscription" method="get">
                                    <input type="hidden" name="productId" value="" />
                                    <button disabled id="pendingDeclineButton" class="ui blue tiny button" type="submit">@Framework.Resources.ButtonLanguage.Decline</button>
                                </form>
                            </div>
                        </div>

                      </div>
                </div>
            </div>
        </div>
    </div>

    <!--Tabulator z produktami zatwierdzonymy przez administratora.-->
    <div class="ui tab" data-tab="SubscribedProducts">
        <div class="ui two column top aligned very relaxed stackable grid">
            <div class="two width column">
                @{
                    if (Model.Any(x => x.State == Framework.Models.ProductState.Accepted))
                    {
                        @await Component.InvokeAsync("ProductsManagementTable", new { products = Model.Where(x => x.State == Framework.Models.ProductState.Accepted) })
                    }
                    else
                    {
                        <div>Brak produktow.</div>
                    }
                }
            </div>

            <div class="column">
                <div class="ui seven column row">

                    <div class="column">
                        <div class="field">
                            <div>
                                <strong>@Framework.Resources.ProductLanguage.ProductName :</strong>
                                <label id="acceptedDetailsName"></label>
                            </div>
                        </div>
                    </div>

                    <div class="column">
                        <div class="field">
                            <strong>@Framework.Resources.ProductLanguage.ProductManufacturer :</strong>
                            <label id="acceptedDetailsManufacturer"></label>
                        </div>
                    </div>

                    <div class="column">
                        <div class="field">
                            <strong>@Framework.Resources.ProductLanguage.Type : </strong>
                            <label id="acceptedDetailsType"></label>
                        </div>
                    </div>

                    <div class="column">
                        <div class="field">
                            <strong>@Framework.Resources.ProductLanguage.Calories :</strong>
                            <label id="acceptedDetailsCalories"></label>
                        </div>
                    </div>

                    <div class="column">
                        <div class="field">
                            <strong>@Framework.Resources.ProductLanguage.Protein :</strong>
                            <label id="acceptedDetailsProtein"></label>
                        </div>
                    </div>

                    <div class="column">
                        <div class="field">
                            <strong>@Framework.Resources.ProductLanguage.Fat :</strong>
                            <label id="acceptedDetailsFat"></label>
                        </div>
                    </div>

                    <div class="column">
                        <div class="field">
                            <strong>@Framework.Resources.ProductLanguage.Carbs :</strong>
                            <label id="acceptedDetailsCarbs"></label>
                        </div>
                    </div>

                    <div class="column row">
                        <form asp-controller="Admin" asp-action="DeclineSubscription" method="get">
                            <input type="hidden" name="productId" value="" />
                            <button disabled id="acceptedDeclineButton" class="ui blue tiny button" type="submit">@Framework.Resources.ButtonLanguage.Decline</button>
                        </form>
                    </div>

                </div>
            </div>
        </div>
    </div>

    <div class="ui tab" data-tab="RejectedProducts">
        <div class="ui two column top aligned very relaxed stackable grid">
            <div class="two width column">
                @await Component.InvokeAsync("ProductsManagementTable", new { products = Model.Where(x => x.State == Framework.Models.ProductState.Denied) })
            </div>

            <div class="column">
                <div class="ui seven column row">

                    <div class="column">
                        <div class="field">
                            <div>
                                <strong>@Framework.Resources.ProductLanguage.ProductName :</strong>
                                <label id="rejectedDetailsName"></label>
                            </div>
                        </div>
                    </div>

                    <div class="column">
                        <div class="field">
                            <strong>@Framework.Resources.ProductLanguage.ProductManufacturer :</strong>
                            <label id="rejectedDetailsManufacturer"></label>
                        </div>
                    </div>

                    <div class="column">
                        <div class="field">
                            <strong>@Framework.Resources.ProductLanguage.Type : </strong>
                            <label id="rejectedDetailsType"></label>
                        </div>
                    </div>

                    <div class="column">
                        <div class="field">
                            <strong>@Framework.Resources.ProductLanguage.Calories :</strong>
                            <label id="rejectedDetailsCalories"></label>
                        </div>
                    </div>

                    <div class="column">
                        <div class="field">
                            <strong>@Framework.Resources.ProductLanguage.Protein :</strong>
                            <label id="rejectedDetailsProtein"></label>
                        </div>
                    </div>

                    <div class="column">
                        <div class="field">
                            <strong>@Framework.Resources.ProductLanguage.Fat :</strong>
                            <label id="rejectedDetailsFat"></label>
                        </div>
                    </div>

                    <div class="column">
                        <div class="field">
                            <strong>@Framework.Resources.ProductLanguage.Carbs :</strong>
                            <label id="rejectedDetailsCarbs"></label>
                        </div>
                    </div>

                    <div class="column row">
                        <form asp-controller="Admin" asp-action="AcceptSubscription" method="get">
                            <input type="hidden" name="productId" value="" />
                            <button disabled id="rejectedAcceptButton" class="ui blue tiny button" type="submit">@Framework.Resources.ButtonLanguage.Accept</button>
                        </form>
                    </div>

                </div>
            </div>
        </div>
    </div>

</body>

@section Scripts
{
<script>

    $(document).ready(function () {
        $('.sortable.table').tablesort();

        $('.tabular.menu .item').tab();
    });

    $('#pendingProductsSearch').on('keyup', function (e)
    {
        if ('' != this.value) {
            var reg = new RegExp(this.value, 'i'); // case-insesitive

            $('.table tbody').find('tr').each(function () {
                var $me = $(this);
                if (!$me.children('td:eq(1)').text().match(reg)) {
                    $me.hide();
                } else {
                    $me.show();
                }
            });
        } else {
            $('.table tbody').find('tr').show();
        }
    });

    function showDetails(b) {
        var rows = $('#table > tbody > tr')
        for (var i = 0; i < rows.length; i++)
            rows.eq(i).attr('class', ' ');

        $(b).attr('class', 'active')

        var guidId = $("[id='selectedProductId']", b).val();
        var data = { Id: guidId };

        $.ajax({
            url: '@Url.Action("GetProductDetails", "Diet")',
            type: "POST",
            data: JSON.stringify(data),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (productDto)
            {
                ManagePendingDetails(productDto);
                ManageSubscribedDetails(productDto);
                ManageRejectedDetails(productDto);

                $('input[name="productId"]').val(guidId);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert(xhr.status);
                alert(thrownError);
            }
        });

        function ManagePendingDetails(productDto){
            if (productDto.state == 1) {
                $('#pendingDetailsName').text(productDto.name);
                $('#pendingDetailsManufacturer').text(productDto.manufacturer);
                $('#pendingDetailsCalories').text(productDto.macro.calories);
                $('#pendingDetailsProtein').text(productDto.macro.protein);
                $('#pendingDetailsFat').text(productDto.macro.fat);
                $('#pendingDetailsCarbs').text(productDto.macro.carbohydrates);
                $('#pendingDetailsType').text(productDto.typeDisplayName);
                $('#pendingAcceptButton').removeAttr('disabled');
                $('#pendingDeclineButton').removeAttr('disabled');
            }
            else {
                $('#pendingDetailsName').text('');
                $('#pendingDetailsManufacturer').text('');
                $('#pendingDetailsCalories').text('');
                $('#pendingDetailsProtein').text('');
                $('#pendingDetailsFat').text('');
                $('#pendingDetailsCarbs').text('');
                $('#pendingDetailsType').text('');
                $('#pendingAcceptButton').attr('disabled', '');
                $('#pendingDeclineButton').attr('disabled', '');
            }
        }

        function ManageSubscribedDetails(productDto) {
            if (productDto.state == 3) {
                $('#acceptedDetailsName').text(productDto.name);
                $('#acceptedDetailsManufacturer').text(productDto.manufacturer);
                $('#acceptedDetailsCalories').text(productDto.macro.calories);
                $('#acceptedDetailsProtein').text(productDto.macro.protein);
                $('#acceptedDetailsFat').text(productDto.macro.fat);
                $('#acceptedDetailsCarbs').text(productDto.macro.carbohydrates);
                $('#acceptedDetailsType').text(productDto.typeDisplayName);
                $('#acceptedDeclineButton').removeAttr('disabled');
            }
            else {
                $('#acceptedDetailsName').text('');
                $('#acceptedDetailsManufacturer').text('');
                $('#acceptedDetailsCalories').text('');
                $('#acceptedDetailsProtein').text('');
                $('#acceptedDetailsFat').text('');
                $('#acceptedDetailsCarbs').text('');
                $('#acceptedDetailsType').text('');
                $('#acceptedDeclineButton').attr('disabled', '');
            }
        }

        function ManageRejectedDetails(productDto) {
            if (productDto.state == 2) {
                $('#rejectedDetailsName').text(productDto.name);
                $('#rejectedDetailsManufacturer').text(productDto.manufacturer);
                $('#rejectedDetailsCalories').text(productDto.macro.calories);
                $('#rejectedDetailsProtein').text(productDto.macro.protein);
                $('#rejectedDetailsFat').text(productDto.macro.fat);
                $('#rejectedDetailsCarbs').text(productDto.macro.carbohydrates);
                $('#rejectedDetailsType').text(productDto.typeDisplayName);
                $('#rejectedAcceptButton').removeAttr('disabled');
            }
            else {
                $('#rejectedDetailsName').text('');
                $('#rejectedDetailsManufacturer').text('');
                $('#rejectedDetailsCalories').text('');
                $('#rejectedDetailsProtein').text('');
                $('#rejectedDetailsFat').text('');
                $('#rejectedDetailsCarbs').text('');
                $('#rejectedDetailsType').text('');
                $('#rejectedAcceptButton').attr('disabled', '');
            }
        }
    }
</script>
}
